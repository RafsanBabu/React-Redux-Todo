{"ast":null,"code":"const initialTodo = [{\n  id: 0,\n  task: \"Dummy Task1 1\"\n}, {\n  id: 1,\n  task: \"Dummy Task 2\"\n}];\n\nconst todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialTodo;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TASK\":\n      state = [...state, action.payload];\n      return state;\n\n    case \"UPDATE_TODO\":\n      const newState = state.map(task => task.id === action.payload.id ? action.payload : task);\n      state = newState;\n      return state;\n\n    case \"DELETE_TASK\":\n      const newTasks = state.filter(task => task.id !== action.payload && task);\n      state = newTasks;\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["E:/React Practice/todolist-project/src/redux/reducers/todoReudcer.js"],"names":["initialTodo","id","task","todoReducer","state","action","type","payload","newState","map","newTasks","filter"],"mappings":"AAAA,MAAMA,WAAW,GAAC,CACd;AACIC,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,IAAI,EAAC;AAFT,CADc,EAKd;AACID,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,IAAI,EAAC;AAFT,CALc,CAAlB;;AAUA,MAAMC,WAAW,GAAI,YAA4B;AAAA,MAA3BC,KAA2B,uEAArBJ,WAAqB;AAAA,MAATK,MAAS;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACIF,MAAAA,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAUC,MAAM,CAACE,OAAjB,CAAR;AACA,aAAOH,KAAP;;AACJ,SAAK,aAAL;AACI,YAAMI,QAAQ,GAAEJ,KAAK,CAACK,GAAN,CAAUP,IAAI,IAAEA,IAAI,CAACD,EAAL,KAAUI,MAAM,CAACE,OAAP,CAAeN,EAAzB,GAA6BI,MAAM,CAACE,OAApC,GAA8CL,IAA9D,CAAhB;AACAE,MAAAA,KAAK,GAAGI,QAAR;AACA,aAAOJ,KAAP;;AACJ,SAAK,aAAL;AACI,YAAMM,QAAQ,GAAEN,KAAK,CAACO,MAAN,CAAcT,IAAD,IAAQA,IAAI,CAACD,EAAL,KAAYI,MAAM,CAACE,OAAnB,IAA8BL,IAAnD,CAAhB;AACAE,MAAAA,KAAK,GAAGM,QAAR;AACA,aAAON,KAAP;;AACJ;AACA,aAAOA,KAAP;AAbJ;AAeH,CAhBD;;AAiBA,eAAeD,WAAf","sourcesContent":["const initialTodo=[\n    {\n        id:0,\n        task:\"Dummy Task1 1\"\n    },\n    {\n        id:1,\n        task:\"Dummy Task 2\"\n    }\n];\nconst todoReducer = ((state=initialTodo,action)=>{\n    switch(action.type){\n        case \"ADD_TASK\" :\n            state = [...state,action.payload]\n            return state;\n        case \"UPDATE_TODO\" :\n            const newState =state.map(task=>task.id===action.payload.id ?action.payload : task);\n            state = newState;\n            return state;\n        case \"DELETE_TASK\" :\n            const newTasks= state.filter((task)=>task.id !== action.payload && task) ;\n            state = newTasks;\n            return state;\n        default :\n        return state;\n    }\n})\nexport default todoReducer;"]},"metadata":{},"sourceType":"module"}