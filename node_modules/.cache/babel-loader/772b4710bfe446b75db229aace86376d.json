{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Practice\\\\todolist-project\\\\src\\\\components\\\\EditTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTodo = () => {\n  _s();\n\n  const [task, setTask] = useState(\"\");\n  const tasks = useSelector(state => state);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const navigator = useNavigate();\n  const currentTask = tasks.find(task => task.id === parseInt(id));\n  useEffect(() => {\n    if (currentTask) {\n      setTask(currentTask.task);\n    }\n\n    ;\n  }, [currentTask]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      id: parseInt(id),\n      task\n    };\n    dispatch({\n      type: \"UPDATE_TODO\",\n      payload: data\n    });\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Update your todo here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 shadow mx-auto p-5\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                class: \"form-control\",\n                value: task,\n                onChange: e => setTask(e.target.value),\n                placeholder: \"Enter your Todo....\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary mr-2\",\n              children: \"Edit Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"btn btn-danger\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(EditTodo, \"r9cP03i5LIBx4LFEdtsy8xG9oLE=\", false, function () {\n  return [useSelector, useNavigate, useParams, useDispatch, useNavigate];\n});\n\n_c = EditTodo;\nexport default EditTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"sources":["E:/React Practice/todolist-project/src/components/EditTodo.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","useNavigate","useParams","EditTodo","task","setTask","tasks","state","navigate","id","dispatch","navigator","currentTask","find","parseInt","handleSubmit","e","preventDefault","data","type","payload","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,QAA6C,kBAA7C;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMS,KAAK,GAAGP,WAAW,CAAEQ,KAAD,IAASA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM;AAACQ,IAAAA;AAAD,MAAOP,SAAS,EAAtB;AAEA,QAAMQ,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,SAAS,GAAGV,WAAW,EAA7B;AACA,QAAMW,WAAW,GAAEN,KAAK,CAACO,IAAN,CAAWT,IAAI,IAAEA,IAAI,CAACK,EAAL,KAAUK,QAAQ,CAACL,EAAD,CAAnC,CAAnB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGgB,WAAH,EAAe;AACbP,MAAAA,OAAO,CAACO,WAAW,CAACR,IAAb,CAAP;AACD;;AAAA;AACF,GAJQ,EAIN,CAACQ,WAAD,CAJM,CAAT;;AAMA,QAAMG,YAAY,GAAIC,CAAD,IAAK;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AACXT,MAAAA,EAAE,EAAEK,QAAQ,CAACL,EAAD,CADD;AAEXL,MAAAA;AAFW,KAAb;AAIFM,IAAAA,QAAQ,CAAC;AAACS,MAAAA,IAAI,EAAE,aAAP;AAAqBC,MAAAA,OAAO,EAACF;AAA7B,KAAD,CAAR;AACAV,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACC,GARD;;AAWE,sBAAO;AAAA,2BACH;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,iCACA;AAAM,YAAA,QAAQ,EAAEO,YAAhB;AAAA,oCACV;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAC,cAAzB;AAAyC,gBAAA,KAAK,EAAEX,IAAhD;AAAsD,gBAAA,QAAQ,EAAEY,CAAC,IAAEX,OAAO,CAACW,CAAC,CAACK,MAAF,CAASC,KAAV,CAA1E;AAA4F,gBAAA,WAAW,EAAC;AAAxG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADU,eAMV;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANU,eAOV,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAa,cAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPU;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAoBH,CAjDD;;GAAMnB,Q;UAGUJ,W,EACGE,W,EAEJC,S,EAEIJ,W,EACCG,W;;;KATdE,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\n\nconst EditTodo = () => {\n\n  const [task, setTask] = useState(\"\");\n  const tasks = useSelector((state)=>state);\n  const navigate = useNavigate();\n\n  const {id} = useParams();\n\n  const dispatch = useDispatch();\n  const navigator = useNavigate();\n  const currentTask =tasks.find(task=>task.id===parseInt(id));\n\n  useEffect(() => {\n    if(currentTask){\n      setTask(currentTask.task);\n    };\n  }, [currentTask])\n\n  const handleSubmit = (e)=>{\n    e.preventDefault();\n    const data = {\n      id: parseInt(id),\n      task\n  };\n  dispatch({type: \"UPDATE_TODO\",payload:data});\n  navigate(\"/\")\n  }\n\n\n    return <div>\n        <div className='container'>\n            <h1 className='text-center'>Update your todo here</h1>\n            <div className='row'>\n            <div className='col-md-6 shadow mx-auto p-5'>\n            <form onSubmit={handleSubmit}>\n  <div className=\"form-group\">\n    <input type=\"text\" class=\"form-control\"  value={task} onChange={e=>setTask(e.target.value)} placeholder=\"Enter your Todo....\"  />\n    \n  </div>\n  \n  <button type=\"submit\" className=\"btn btn-primary mr-2\">Edit Todo</button>\n  <Link to=\"/\" className=\"btn btn-danger\">Cancel</Link>\n</form>\n</div>\n            </div>\n\n        </div>\n\n    </div>;\n}\n\n\n\nexport default EditTodo;"]},"metadata":{},"sourceType":"module"}